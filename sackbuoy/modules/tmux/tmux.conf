set-option -g prefix C-b
bind-key C-b send-prefix

set -ag terminal-overrides ",xterm-256color:RGB"
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

set -sg escape-time 0

# powerline plugin(required for some themes)
set -g @plugin 'erikw/tmux-powerline'

# vi stuff
## Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

setw -g mode-keys vi

# turn mouse off
setw -g mouse off

set-option -g default-terminal screen-256color

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 1500
set-window-option -g window-status-current-style fg=magenta

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace wl-copy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace wl-copy"


# for opening pre-existing split if in zoomed window
bind-key % if-shell "[ #{window_zoomed_flag} -eq 1 ]" "resize-pane -Z" "split-window -h"

set-option -g repeat-time 0

# themes
# set -g @plugin 'nordtheme/tmux'
# set -g @plugin 'egel/tmux-gruvbox'
# set -g @tmux-gruvbox 'dark' # or 'light'
set -g @plugin '2kabhishek/tmux2k'
set -g @tmux2k-right-plugins 'kube'
set -g @tmux2k-left-plugins 'gcloud git'
set -g @tmux2k-theme 'onedark'

set -g @tmux2k-git-colors "red black"
set -g @tmux2k-git-show-diff-symbol ''
set -g @tmux2k-kube-symbol '󱃾'
set -g @tmux2k-gcloud-symbol '󰅟'

# plugins
set -g @plugin 'christoomey/vim-tmux-navigator'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
run -b '~/.config/tmux/plugins/tpm/tpm'
